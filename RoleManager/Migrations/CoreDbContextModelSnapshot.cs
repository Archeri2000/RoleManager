// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoleManager.Database;

namespace RoleManager.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RoleManager.Model.GuildConfigModel", b =>
                {
                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LogChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<List<ulong>>("Roles")
                        .HasColumnType("numeric(20,0)[]");

                    b.HasKey("GuildId");

                    b.ToTable("GuildConfigModels");
                });

            modelBuilder.Entity("RoleManager.Model.JailConfigModel", b =>
                {
                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LogChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("ShouldLog")
                        .HasColumnType("boolean");

                    b.HasKey("GuildId");

                    b.ToTable("JailConfigModels");
                });

            modelBuilder.Entity("RoleManager.Model.JailData", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("GuildId", "UserId");

                    b.ToTable("JailDatas");
                });

            modelBuilder.Entity("RoleManager.Model.ReactionRoleModel", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("RuleId")
                        .HasColumnType("uuid");

                    b.HasKey("GuildId", "Name");

                    b.HasIndex("RuleId")
                        .IsUnique();

                    b.ToTable("ReactionRoleModels");
                });

            modelBuilder.Entity("RoleManager.Model.ReactionRuleModelBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("rule_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("_iReactionRuleModels");

                    b.HasDiscriminator<string>("rule_type").HasValue("ReactionRuleModelBase");
                });

            modelBuilder.Entity("RoleManager.Model.RoleEventStorageModel", b =>
                {
                    b.Property<Guid>("StorageKey")
                        .HasColumnType("uuid");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("StorageKey", "User");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RoleManager.Model.ReactionRuleModel", b =>
                {
                    b.HasBaseType("RoleManager.Model.ReactionRuleModelBase");

                    b.Property<string>("Reactions")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("reaction_role");
                });

            modelBuilder.Entity("RoleManager.Model.ReverseRuleModel", b =>
                {
                    b.HasBaseType("RoleManager.Model.ReactionRuleModelBase");

                    b.Property<string>("Emote")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("linked_reaction_role");
                });

            modelBuilder.Entity("RoleManager.Model.JailConfigModel", b =>
                {
                    b.OwnsOne("RoleManager.Model.RoleManageModel", "Roles", b1 =>
                        {
                            b1.Property<decimal>("JailConfigModelGuildId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<List<ulong>>("Add")
                                .HasColumnType("numeric(20,0)[]");

                            b1.Property<List<ulong>>("Remove")
                                .HasColumnType("numeric(20,0)[]");

                            b1.HasKey("JailConfigModelGuildId");

                            b1.ToTable("JailConfigModels");

                            b1.WithOwner()
                                .HasForeignKey("JailConfigModelGuildId");
                        });

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("RoleManager.Model.JailData", b =>
                {
                    b.OwnsOne("RoleManager.Model.RoleUpdateModel", "Roles", b1 =>
                        {
                            b1.Property<decimal>("JailDataGuildId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<decimal>("JailDataUserId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<decimal>("User")
                                .HasColumnType("numeric(20,0)");

                            b1.HasKey("JailDataGuildId", "JailDataUserId");

                            b1.ToTable("JailDatas");

                            b1.WithOwner()
                                .HasForeignKey("JailDataGuildId", "JailDataUserId");

                            b1.OwnsOne("RoleManager.Model.RoleManageModel", "RolesChanged", b2 =>
                                {
                                    b2.Property<decimal>("RoleUpdateModelJailDataGuildId")
                                        .HasColumnType("numeric(20,0)");

                                    b2.Property<decimal>("RoleUpdateModelJailDataUserId")
                                        .HasColumnType("numeric(20,0)");

                                    b2.Property<List<ulong>>("Add")
                                        .HasColumnType("numeric(20,0)[]");

                                    b2.Property<List<ulong>>("Remove")
                                        .HasColumnType("numeric(20,0)[]");

                                    b2.HasKey("RoleUpdateModelJailDataGuildId", "RoleUpdateModelJailDataUserId");

                                    b2.ToTable("JailDatas");

                                    b2.WithOwner()
                                        .HasForeignKey("RoleUpdateModelJailDataGuildId", "RoleUpdateModelJailDataUserId");
                                });

                            b1.Navigation("RolesChanged");
                        });

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("RoleManager.Model.ReactionRoleModel", b =>
                {
                    b.HasOne("RoleManager.Model.ReactionRuleModelBase", "Rule")
                        .WithOne()
                        .HasForeignKey("RoleManager.Model.ReactionRoleModel", "RuleId");

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("RoleManager.Model.ReactionRuleModelBase", b =>
                {
                    b.OwnsOne("RoleManager.Model.ReactionRoleConfig", "Config", b1 =>
                        {
                            b1.Property<Guid>("ReactionRuleModelBaseId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<bool>("ShouldLogResult")
                                .HasColumnType("boolean");

                            b1.Property<bool>("ShouldRemoveReaction")
                                .HasColumnType("boolean");

                            b1.Property<bool>("ShouldStoreData")
                                .HasColumnType("boolean");

                            b1.Property<Guid>("StorageKey")
                                .HasColumnType("uuid");

                            b1.HasKey("ReactionRuleModelBaseId");

                            b1.ToTable("_iReactionRuleModels");

                            b1.WithOwner()
                                .HasForeignKey("ReactionRuleModelBaseId");
                        });

                    b.Navigation("Config");
                });

            modelBuilder.Entity("RoleManager.Model.RoleEventStorageModel", b =>
                {
                    b.OwnsOne("RoleManager.Model.RoleManageModel", "RolesChanged", b1 =>
                        {
                            b1.Property<Guid>("RoleEventStorageModelStorageKey")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("RoleEventStorageModelUser")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<List<ulong>>("Add")
                                .HasColumnType("numeric(20,0)[]");

                            b1.Property<List<ulong>>("Remove")
                                .HasColumnType("numeric(20,0)[]");

                            b1.HasKey("RoleEventStorageModelStorageKey", "RoleEventStorageModelUser");

                            b1.ToTable("Events");

                            b1.WithOwner()
                                .HasForeignKey("RoleEventStorageModelStorageKey", "RoleEventStorageModelUser");
                        });

                    b.Navigation("RolesChanged");
                });
#pragma warning restore 612, 618
        }
    }
}
